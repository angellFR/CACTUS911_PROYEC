//
//  DetailViewController.swift
//  PRACTICA_CACTUS911
//
//  Created Administrator on 04/07/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class DetailViewController: UIViewController {

    //MARK: - Protocol Properties
	var presenter: DetailPresenterProtocol?

    //MARK: - Properties
    var detailInfo: Result?
    
    private var imagen: UIImageView = {
        let imageView = UIImageView()
        imageView.image = UIImage(named: "image")
        imageView.translatesAutoresizingMaskIntoConstraints = false
        return imageView
    }()
    private var labelDescription: UILabel = {
        let label = UILabel()
        label.text = "Bulbasaur es un Pokémon cuadrúpedo de color verde, posee manchas de una tonalidad más oscura del mismo color con distintas formas geométricas. Su cabeza representa cerca de un tercio de su cuerpo. En su frente se ubican tres manchas que pueden cambiar de posición, forma o lugar dependiendo del ejemplar. Tiene como orejas muñones pequeños y puntiagudos. Sus ojos son grandes y de color rojo. Sus patas son cortas y posee tres garras en cada una. Este Pokémon tiene plantado un bulbo en el lomo desde que nace, esta semilla crece y se desarrolla a lo largo del ciclo de vida de Bulbasaur a medida que suceden sus evoluciones. El bulbo absorbe y almacena la energía solar que Bulbasaur necesita para hacer florecer el bulbo de su lomo y evolucionar en Ivysaur."
        label.numberOfLines = 50
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    private var labelName: UILabel = {
        let label = UILabel()
        label.text = "Bulbasor"
        if #available(iOS 16.0, *) {
            label.font = .systemFont(ofSize: 25, weight: .black, width: .condensed)
        } else {
            // Fallback on earlier versions
        }
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    private var labelEdited: UILabel = {
        let label = UILabel()
        label.text = "Defensa: 49"
        return label
    }()
    
    private var labelCreated: UILabel = {
        let label = UILabel()
        label.text = "Ataque: 45"
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        setupUi()
    }
    
    //MARK: - Methods
    
    func setupUi(){
     
        view.addSubview(imagen)
        view.addSubview(labelDescription)
        view.addSubview(labelName)
        view.addSubview(labelEdited)
        view.addSubview(labelCreated)
        
        labelName.addAnchorsAndCenter(centerX: true, centerY: nil, width: nil, height: nil, left: nil, top: 85, right: nil, bottom: nil)
        imagen.addAnchorsAndCenter(centerX: true, centerY: false, width: 250, height: 350, left: nil, top: 10, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelName)
        labelDescription.addAnchorsAndSize(width: nil, height: nil, left: 20, top: 20, right: 20, bottom: nil, withAnchor: .top, relativeToView: imagen)
        labelEdited.addAnchorsAndSize(width: nil, height: nil, left: 20, top: 10, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelDescription)
        labelCreated.addAnchorsAndSize(width: nil, height: nil, left: 20, top: 10, right: nil, bottom: nil, withAnchor: .top, relativeToView: labelEdited)
        
        labelName.text = detailInfo?.name
        labelDescription.text = detailInfo?.vehicles.description
        labelEdited.text = detailInfo?.edited
        labelCreated.text = detailInfo?.created
        
        
    }
}

//MARK: - View Methods
extension DetailViewController: DetailViewProtocol {
    func inforDetail(detail: Result) {
        print("Detalles en la vista detail \(detail)")
        detailInfo = detail
    }
    
    
}

//MARK: - Private functions
extension DetailViewController {
    
}
