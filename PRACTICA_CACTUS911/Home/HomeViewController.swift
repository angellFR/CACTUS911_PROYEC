//
//  HomeViewController.swift
//  PRACTICA_CACTUS911
//
//  Created Administrator on 02/07/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HomeViewController: UIViewController, UICollectionViewDataSource, UICollectionViewDelegate {
     
    //MARK: - Protocol Properties
	var presenter: HomePresenterProtocol?

    //MARK: - Properties
    let items = ["People","Planets","Films", "Species"]
    var dataSource : Welcome?
    var celdaSelect : Result?

    private var tableView : UITableView = {
        let tableView = UITableView()
        tableView.translatesAutoresizingMaskIntoConstraints = false
        tableView.register(TableViewCell.self, forCellReuseIdentifier: "TableViewCell")
        return tableView
    }()
    
    lazy var collectionView: UICollectionView = {
        let collectionView = UICollectionView()
        collectionView.translatesAutoresizingMaskIntoConstraints = false
        return collectionView
    }()
    
    //MARK: - Life Cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .white
        title = "Star-Wars"
        presenter?.getData(Typee: .people)
        initUi()
        
    }
    
    //MARK: - Methods
    func initUi(){
        
//        navigationController?.navigationBar.tintColor = .white
        let layout = UICollectionViewFlowLayout()
        layout.scrollDirection = .vertical
        layout.minimumLineSpacing = 5
        layout.minimumInteritemSpacing = 5
//        layout.itemSize = CGSize(width: (view.frame.size.width/2)-4, height: (view.frame.size.width/3)-4)
        layout.itemSize = CGSize(width: width/2.05, height: 400)

        collectionView = UICollectionView(frame: .zero, collectionViewLayout: layout)

//        guard let collectionView = collectionView else{
//            return
//        }
        collectionView.register(CustomCollectionViewCell.self, forCellWithReuseIdentifier: CustomCollectionViewCell.identifier)
        collectionView.dataSource = self
        collectionView.delegate = self
        view.addSubview(collectionView)
        collectionView.frame = view.bounds
        collectionView.backgroundColor = UIColor(named: "background")

    }
}

//MARK: - View Methods
extension HomeViewController: HomeViewProtocol {
    func info(informacion: Welcome) {
        print("la info ya esta en la view \(informacion)")
        dataSource = informacion
        guard let data = dataSource?.results else{ return }
        print("datos:::: \(data)")
        collectionView.reloadData()
}
    
}

//MARK: - Private functions
extension HomeViewController {
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return dataSource?.results.count ?? 0
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: CustomCollectionViewCell.identifier, for: indexPath) as! CustomCollectionViewCell
        guard let resul = dataSource?.results else {return cell}
        cell.configure(model: resul[indexPath.row])
        cell.contentView.layer.cornerRadius = 20
        cell.layer.masksToBounds = true
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        celdaSelect = dataSource?.results[indexPath.row]
        print("Celda seleccionado::::: \(celdaSelect)")
        guard let detail = celdaSelect else { return }
        presenter?.celdaSelect(detail: detail)
        tableView.deselectRow(at: indexPath, animated: true)
    }
    
}

